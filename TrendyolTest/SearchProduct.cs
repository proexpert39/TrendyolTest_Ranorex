///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TrendyolTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SearchProduct recording.
    /// </summary>
    [TestModule("8e7f3ea2-bde1-48c0-9faa-75625e8a54c4", ModuleType.Recording, 1)]
    public partial class SearchProduct : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TrendyolTestRepository repository.
        /// </summary>
        public static TrendyolTestRepository repo = TrendyolTestRepository.Instance;

        static SearchProduct instance = new SearchProduct();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SearchProduct()
        {
            SearchKeyword = "iphone 11";
            ProductUrl = "";
            CartUrl = "https://www.trendyol.com/sepet";
            FirstProductLinkInCartPage = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SearchProduct Instance
        {
            get { return instance; }
        }

#region Variables

        string _SearchKeyword;

        /// <summary>
        /// Gets or sets the value of variable SearchKeyword.
        /// </summary>
        [TestVariable("380126c1-b383-40ae-a755-e0889a9187e4")]
        public string SearchKeyword
        {
            get { return _SearchKeyword; }
            set { _SearchKeyword = value; }
        }

        string _ProductUrl;

        /// <summary>
        /// Gets or sets the value of variable ProductUrl.
        /// </summary>
        [TestVariable("ca589e3b-8562-435c-9741-89d602273641")]
        public string ProductUrl
        {
            get { return _ProductUrl; }
            set { _ProductUrl = value; }
        }

        string _CartUrl;

        /// <summary>
        /// Gets or sets the value of variable CartUrl.
        /// </summary>
        [TestVariable("4a329c3a-957d-440b-b01b-b52b66f72850")]
        public string CartUrl
        {
            get { return _CartUrl; }
            set { _CartUrl = value; }
        }

        string _FirstProductLinkInCartPage;

        /// <summary>
        /// Gets or sets the value of variable FirstProductLinkInCartPage.
        /// </summary>
        [TestVariable("259c9e1e-fb8f-466a-a904-4270e3fa2490")]
        public string FirstProductLinkInCartPage
        {
            get { return _FirstProductLinkInCartPage; }
            set { _FirstProductLinkInCartPage = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'trendyol'.", repo.trendyol.SelfInfo, new RecordItemIndex(0));
            repo.trendyol.Self.Focus();
            Delay.Milliseconds(0);
            
            // Search Product
            Report.Log(ReportLevel.Info, "Section", "Search Product", new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'trendyol.SearchInput'.", repo.trendyol.SearchInputInfo, new RecordItemIndex(2));
            repo.trendyol.SearchInput.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(3));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$SearchKeyword' on item 'trendyol.SearchInput'.", repo.trendyol.SearchInputInfo, new RecordItemIndex(4));
            repo.trendyol.SearchInput.Element.SetAttributeValue("Value", SearchKeyword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press with focus on 'trendyol.SearchInput'.", repo.trendyol.SearchInputInfo, new RecordItemIndex(6));
            Keyboard.PrepareFocus(repo.trendyol.SearchInput);
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'trendyol'.", repo.trendyol.SelfInfo, new RecordItemIndex(7));
            repo.trendyol.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            // Go to Details Page of First Product in search results
            Report.Log(ReportLevel.Info, "Section", "Go to Details Page of First Product in search results", new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'trendyol.FirstProductLinkInSearchPage'.", repo.trendyol.FirstProductLinkInSearchPageInfo, new RecordItemIndex(9));
            Validate.Exists(repo.trendyol.FirstProductLinkInSearchPageInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Href' from item 'trendyol.FirstProductLinkInSearchPage' and assigning its value to variable 'ProductUrl'.", repo.trendyol.FirstProductLinkInSearchPageInfo, new RecordItemIndex(10));
            ProductUrl = repo.trendyol.FirstProductLinkInSearchPage.Element.GetAttributeValueText("Href");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Navigate(variable $ProductUrl) on item 'trendyol'.", repo.trendyol.SelfInfo, new RecordItemIndex(11));
            repo.trendyol.Self.Navigate(ProductUrl);
            Delay.Milliseconds(0);
            
            // Add to cart the product
            Report.Log(ReportLevel.Info, "Section", "Add to cart the product", new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'trendyol.AddToCartButton'.", repo.trendyol.AddToCartButtonInfo, new RecordItemIndex(13));
            repo.trendyol.AddToCartButton.As<WebElement>().PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(14));
            Delay.Duration(5000, false);
            
            // Go To Cart Page
            Report.Log(ReportLevel.Info, "Section", "Go To Cart Page", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Navigate(variable $CartUrl) on item 'trendyol'.", repo.trendyol.SelfInfo, new RecordItemIndex(16));
            repo.trendyol.Self.Navigate(CartUrl);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'trendyol'.", repo.trendyol.SelfInfo, new RecordItemIndex(17));
            repo.trendyol.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            // Check product if exists in cart page
            Report.Log(ReportLevel.Info, "Section", "Check product if exists in cart page", new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'trendyol.FirstProductLinkInCartPage'.", repo.trendyol.FirstProductLinkInCartPageInfo, new RecordItemIndex(19));
            Validate.Exists(repo.trendyol.FirstProductLinkInCartPageInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Href' from item 'trendyol.FirstProductLinkInCartPage' and assigning its value to variable 'FirstProductLinkInCartPage'.", repo.trendyol.FirstProductLinkInCartPageInfo, new RecordItemIndex(20));
            FirstProductLinkInCartPage = repo.trendyol.FirstProductLinkInCartPage.Element.GetAttributeValueText("Href");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual ($FirstProductLinkInCartPage=$ProductUrl) on item 'trendyol.FirstProductLinkInCartPage'.", repo.trendyol.FirstProductLinkInCartPageInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.trendyol.FirstProductLinkInCartPageInfo, FirstProductLinkInCartPage, ProductUrl);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
