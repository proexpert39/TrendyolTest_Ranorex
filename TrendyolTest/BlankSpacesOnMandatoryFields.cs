///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TrendyolTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BlankSpacesOnMandatoryFields recording.
    /// </summary>
    [TestModule("5a01f772-e1a0-498e-acc9-3dde4630dff9", ModuleType.Recording, 1)]
    public partial class BlankSpacesOnMandatoryFields : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TrendyolTestRepository repository.
        /// </summary>
        public static TrendyolTestRepository repo = TrendyolTestRepository.Instance;

        static BlankSpacesOnMandatoryFields instance = new BlankSpacesOnMandatoryFields();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BlankSpacesOnMandatoryFields()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BlankSpacesOnMandatoryFields Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Email Input
            Report.Log(ReportLevel.Info, "Section", "Email Input", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'trendyol.RegisterEmailInput' at Center.", repo.trendyol.RegisterEmailInputInfo, new RecordItemIndex(1));
            repo.trendyol.RegisterEmailInput.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'trendyol.RegisterEmailInput' at Center.", repo.trendyol.RegisterEmailInputInfo, new RecordItemIndex(2));
            repo.trendyol.RegisterEmailInput.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '  ' with focus on 'trendyol.RegisterEmailInput'.", repo.trendyol.RegisterEmailInputInfo, new RecordItemIndex(3));
            repo.trendyol.RegisterEmailInput.PressKeys("  ");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeNotContains (TagValue!>' ') on item 'trendyol.RegisterEmailInput'.", repo.trendyol.RegisterEmailInputInfo, new RecordItemIndex(4));
                Validate.AttributeNotContains(repo.trendyol.RegisterEmailInputInfo, "TagValue", " ", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeNotContains (Value!>'') on item 'trendyol.RegisterEmailInput'.", repo.trendyol.RegisterEmailInputInfo, new RecordItemIndex(5));
                Validate.AttributeNotContains(repo.trendyol.RegisterEmailInputInfo, "Value", "", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            // Password Input
            Report.Log(ReportLevel.Info, "Section", "Password Input", new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'trendyol.RegisterPasswordInput' at Center.", repo.trendyol.RegisterPasswordInputInfo, new RecordItemIndex(7));
            repo.trendyol.RegisterPasswordInput.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '  ' with focus on 'trendyol.RegisterPasswordInput'.", repo.trendyol.RegisterPasswordInputInfo, new RecordItemIndex(8));
            repo.trendyol.RegisterPasswordInput.PressKeys("  ");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeNotContains (TagValue!>' ') on item 'trendyol.RegisterPasswordInput'.", repo.trendyol.RegisterPasswordInputInfo, new RecordItemIndex(9));
                Validate.AttributeNotContains(repo.trendyol.RegisterPasswordInputInfo, "TagValue", " ", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeNotContains (Value!>' ') on item 'trendyol.RegisterPasswordInput'.", repo.trendyol.RegisterPasswordInputInfo, new RecordItemIndex(10));
                Validate.AttributeNotContains(repo.trendyol.RegisterPasswordInputInfo, "Value", " ", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            // Marketing Email Checkbox
            Report.Log(ReportLevel.Info, "Section", "Marketing Email Checkbox", new RecordItemIndex(11));
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagValue='false') on item 'trendyol.MarketingEmailCheckboxDiv'.", repo.trendyol.MarketingEmailCheckboxDivInfo, new RecordItemIndex(12));
                Validate.AttributeEqual(repo.trendyol.MarketingEmailCheckboxDivInfo, "TagValue", "false", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            // Personal Data Checkbox
            Report.Log(ReportLevel.Info, "Section", "Personal Data Checkbox", new RecordItemIndex(13));
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (TagValue='false') on item 'trendyol.PersonalDataCheckboxDiv'.", repo.trendyol.PersonalDataCheckboxDivInfo, new RecordItemIndex(14));
                Validate.AttributeEqual(repo.trendyol.PersonalDataCheckboxDivInfo, "TagValue", "false", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
